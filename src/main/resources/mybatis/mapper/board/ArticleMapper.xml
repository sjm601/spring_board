<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.ezen.springmvc.domain.board.mapper.ArticleMapper">

	<!-- 게시글 등록 -->
	<insert id="create" parameterType="ArticleDTO">
		INSERT INTO article (
			article_id,
			board_id,
			writer,
			subject,
			content,
			passwd,
			group_no,
			level_no,
			order_no)
		VALUES (
			article_id_seq.NEXTVAL,
			#{boardId},
			#{writer},
			#{subject},
			#{content},
			#{passwd},
			article_id_seq.CURRVAL,
			#{levelNo},
			#{orderNo})
	</insert>
	
	<!-- 게시글 찾기 -->
	<select id="find" parameterType="int" resultType="ArticleDTO">
		SELECT
			article_id,
			board_id,
			writer,
			regdate,
			subject,
			content,
			passwd,
			group_no,
			level_no,
			order_no
		FROM
			article
		WHERE
			article_id = #{articleId}
	</select>
	

	<!-- 페이징 계산(검색값 포함)에 필요한 게시글 전체 갯수 -->
	<select id="getCountAll" parameterType="object" resultType="int" >
		SELECT
    		COUNT(article_id) "cnt"
		FROM
    		article
		<where>
        	board_id = #{boardId}
    		<if test="keyword != null">AND writer LIKE '%' || #{keyword} || '%'</if>
    		<if test="keyword != null">OR subject LIKE '%' || #{keyword} || '%'</if>
    		<if test="keyword != null">OR content LIKE '%' || #{keyword} || '%'</if>
    	</where>
	</select>
	
	<!-- 페이지당 보여지는 목록 갯수(검색값 포함)에 따른 게시글 목록 -->
	<select id="findByAll" parameterType="PageParams" resultType="ArticleDTO">
		SELECT
			articleId,
			subject,
            writer,
            regdate,
            hitcount,
            group_no,
			level_no,
			order_no
		FROM (
			SELECT
				articleId,
				CEIL(rownum / #{elementSize}) request_page,
				subject,
				writer,
				TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') regdate,
				hitcount,
				group_no,
				level_no,
				order_no
             FROM (
             	SELECT 
             		article_id articleId,
             		subject,
             		writer,
             		regdate,
             		hitcount,
             		group_no,
					level_no,
					order_no
                FROM   
                	article
				<where>
					board_id = #{boardId}
					<if test="keyword != null">AND writer  LIKE '%' || #{keyword} || '%'</if>
					<if test="keyword != null">OR subject LIKE '%' || #{keyword} || '%'</if>
					<if test="keyword != null">OR content LIKE '%' || #{keyword} || '%'</if>
				</where>
				ORDER  BY group_no DESC,
						  order_no ASC))
		WHERE  request_page = #{requestPage}
	</select>
	
	<!-- 댓글, 대댓글 등록 기능을 위한 부모 게시글 검색 -->
	<select id="findArticle" parameterType="int" resultType="ArticleDTO" >
		SELECT
			article_id "articleId",
			board_id "boardId",
			group_no "groupNo",
			level_no "levelNo"
		FROM
			article
		WHERE
			article_id = #{articleId}
	</select>
	
	<!-- 댓글, 대댓글 등록 전 orderNo 업데이트 -->
	<update id="updateOrderNo" parameterType="ArticleDTO">
		UPDATE
			article
		SET
			order_no = order_no + 1
		WHERE
			board_id = #{boardId} AND
			group_no = #{groupNo} AND
			order_no > (SELECT
       						order_no 
                       	FROM
                       		article 
                       	WHERE
                       		article_id = #{articleId})
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="createReply" parameterType="object">
		INSERT INTO article (
			article_id,
			board_id,
			writer,
			subject,
			content,
			passwd,
			group_no,
			level_no,
			order_no)
		VALUES (
			article_id_seq.NEXTVAL,
			#{articleDTO.boardId},
			#{articleDTO.writer},
			#{articleDTO.subject},
			#{articleDTO.content},
			#{articleDTO.passwd},
			#{topArticle.groupNo},
			#{topArticle.levelNo} + 1,
			(SELECT 
				order_no + 1
             FROM
             	article
             WHERE
             	article_id = #{topArticle.articleId}))
	</insert>
	
	<!-- 대댓글 등록 -->
	<insert id="createNestedReply" parameterType="object">
		INSERT INTO article (
			article_id,
			board_id,
			writer,
			subject,
			content,
			passwd,
			group_no,
			level_no,
			order_no)
		VALUES (
			article_id_seq.NEXTVAL,
			#{articleDTO.boardId},
			#{articleDTO.writer},
			#{articleDTO.subject},
			#{articleDTO.content},
			#{articleDTO.passwd},
			#{articleDTO.groupNo},
			#{articleDTO.levelNo} + 1,
			(SELECT
				order_no + 1
             FROM
             	article
             WHERE
             	article_id = #{topArticleId}))
	</insert>
	
	<!-- 게시글 상세보기 시 조회수 갱신 -->
	<update id="updateHitCount">
		UPDATE
			article
		<set>
	        hitcount = hitcount + 1
	    </set>
		WHERE
			article_id = #{articleId}
	</update>
	
	<!-- 게시글 상세보기 -->
	<select id="readArticle" parameterType="int" resultType="ArticleDTO">
		SELECT
			article_id,
			board_id,
			writer,
			passwd,
			subject,
			content,
			regdate,
			hitcount
		FROM
			article
		WHERE
			article_id = #{articleId}
	</select>
	
	<!-- 게시글 업데이트 -->
	<update id="update" parameterType="ArticleDTO">
		UPDATE
			article
		<set>
	        <if test="subject != null">subject = #{subject},</if>
	        <if test="content != null">content = #{content},</if>
	        regdate = sysdate
	    </set>
		WHERE
			article_id = #{articleId}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE
		FROM
			article
		WHERE
			article_id = #{deleteArticleId}
	</delete>
</mapper>